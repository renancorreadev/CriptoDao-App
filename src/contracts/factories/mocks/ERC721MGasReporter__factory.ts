/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721MGasReporter,
  ERC721MGasReporterInterface,
} from "../../mocks/ERC721MGasReporter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintOne",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintTen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMintOne",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMintTen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052604051620019ca380380620019ca8339810160408190526200002691620001cb565b8181818181600090805190602001906200004292919062000072565b5080516200005890600190602084019062000072565b505060048054600101815560005250620002859350505050565b828054620000809062000232565b90600052602060002090601f016020900481019282620000a45760008555620000ef565b82601f10620000bf57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ef578251825591602001919060010190620000d2565b50620000fd92915062000101565b5090565b5b80821115620000fd576000815560010162000102565b600082601f83011262000129578081fd5b81516001600160401b03808211156200014657620001466200026f565b604051601f8301601f19908116603f011681019082821181831017156200017157620001716200026f565b816040528381526020925086838588010111156200018d578485fd5b8491505b83821015620001b0578582018301518183018401529082019062000191565b83821115620001c157848385830101525b9695505050505050565b60008060408385031215620001de578182fd5b82516001600160401b0380821115620001f5578384fd5b620002038683870162000118565b9350602085015191508082111562000219578283fd5b50620002288582860162000118565b9150509250929050565b600181811c908216806200024757607f821691505b602082108114156200026957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61173580620002956000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c80636c0360eb116100d8578063b88d4fde1161008c578063e985e9c511610066578063e985e9c5146102f0578063ef9c0bec1461032c578063fa695a971461033f57600080fd5b8063b88d4fde146102b7578063c87b56dd146102ca578063db6745f8146102dd57600080fd5b806381861f84116100bd57806381861f841461028957806395d89b411461029c578063a22cb465146102a457600080fd5b80636c0360eb1461026e57806370a082311461027657600080fd5b806323b872dd1161012f57806342842e0e1161011457806342842e0e146102355780634f6ccce7146102485780636352211e1461025b57600080fd5b806323b872dd1461020f5780632f745c591461022257600080fd5b8063081812fc11610160578063081812fc146101b9578063095ea7b3146101e457806318160ddd146101f957600080fd5b806301ffc9a71461017c57806306fdde03146101a4575b600080fd5b61018f61018a3660046114fd565b610352565b60405190151581526020015b60405180910390f35b6101ac6103bf565b60405161019b91906115e4565b6101cc6101c7366004611535565b610451565b6040516001600160a01b03909116815260200161019b565b6101f76101f23660046114d4565b6104bd565b005b600454600019015b60405190815260200161019b565b6101f761021d36600461138a565b61059e565b6102016102303660046114d4565b6105ae565b6101f761024336600461138a565b610696565b610201610256366004611535565b610798565b6101cc610269366004611535565b6107e3565b6101ac610886565b61020161028436600461133e565b610914565b6101f761029736600461133e565b6109b2565b6101ac6109c0565b6101f76102b236600461149a565b6109cf565b6101f76102c53660046113c5565b610a3b565b6101ac6102d8366004611535565b610b2f565b6101f76102eb36600461133e565b610c59565b61018f6102fe366004611358565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205460ff1690565b6101f761033a36600461133e565b610c64565b6101f761034d36600461133e565b610c6f565b60006301ffc9a760e01b6001600160e01b03198316148061038357506380ac58cd60e01b6001600160e01b03198316145b8061039e5750635b5e139f60e01b6001600160e01b03198316145b806103b9575063780e9d6360e01b6001600160e01b03198316145b92915050565b6060600080546103ce90611666565b80601f01602080910402602001604051908101604052809291908181526020018280546103fa90611666565b80156104475780601f1061041c57610100808354040283529160200191610447565b820191906000526020600020905b81548152906001019060200180831161042a57829003601f168201915b5050505050905090565b600061045c82610c7a565b6104a15760405162461bcd60e51b81526020600482015260116024820152702727a722ac24a9aa22a72a2faa27a5a2a760791b60448201526064015b60405180910390fd5b506000908152600260205260409020546001600160a01b031690565b60006104c8826107e3565b6001600160a01b038116600090815260036020908152604080832033845290915290205490915060ff16806105055750336001600160a01b038216145b6105425760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610498565b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6105a9838383610c8e565b505050565b60006105b983610914565b82106105f75760405162461bcd60e51b815260206004820152600d60248201526c0929cac82989288be929c888ab609b1b6044820152606401610498565b600454600090815b8181101561064a57610610816107e3565b6001600160a01b0316866001600160a01b03161415610642578483141561063b5792506103b9915050565b6001909201915b6001016105ff565b505060405162461bcd60e51b815260206004820152600960248201527f4e4f545f464f554e44000000000000000000000000000000000000000000000060448201526064019050610498565b6106a1838383610c8e565b6001600160a01b0382163b15806107595750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a401602060405180830381600087803b15801561071557600080fd5b505af1158015610729573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074d9190611519565b6001600160e01b031916145b6105a95760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610498565b60006107a382610c7a565b6107df5760405162461bcd60e51b815260206004820152600d60248201526c0929cac82989288be929c888ab609b1b6044820152606401610498565b5090565b60006107ee82610c7a565b61082e5760405162461bcd60e51b81526020600482015260116024820152702727a722ac24a9aa22a72a2faa27a5a2a760791b6044820152606401610498565b815b6004818154811061085157634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316915081156108745750919050565b8061087e816116a1565b915050610830565b6005805461089390611666565b80601f01602080910402602001604051908101604052809291908181526020018280546108bf90611666565b801561090c5780601f106108e15761010080835404028352916020019161090c565b820191906000526020600020905b8154815290600101906020018083116108ef57829003601f168201915b505050505081565b60006001600160a01b03821661096c5760405162461bcd60e51b815260206004820152600d60248201527f494e56414c49445f4f574e4552000000000000000000000000000000000000006044820152606401610498565b60045460015b818110156109ab57610983816107e3565b6001600160a01b0316846001600160a01b031614156109a3576001909201915b600101610972565b5050919050565b6109bd81600a610f26565b50565b6060600180546103ce90611666565b3360008181526003602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610a46848484610c8e565b6001600160a01b0383163b1580610aea5750604051630a85bd0160e11b808252906001600160a01b0385169063150b7a0290610a8c9033908990889088906004016115a8565b602060405180830381600087803b158015610aa657600080fd5b505af1158015610aba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ade9190611519565b6001600160e01b031916145b610b295760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610498565b50505050565b6060610b3a82610c7a565b610b7a5760405162461bcd60e51b81526020600482015260116024820152702727a722ac24a9aa22a72a2faa27a5a2a760791b6044820152606401610498565b600060058054610b8990611666565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb590611666565b8015610c025780601f10610bd757610100808354040283529160200191610c02565b820191906000526020600020905b815481529060010190602001808311610be557829003601f168201915b505050505090508051600014610c415780610c1c84611063565b604051602001610c2d929190611579565b604051602081830303815290604052610c52565b604051806020016040528060008152505b9392505050565b6109bd816001610f26565b6109bd81600a61119d565b6109bd81600161119d565b600081158015906103b95750506004541190565b826001600160a01b0316610ca1826107e3565b6001600160a01b031614610cf75760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d000000000000000000000000000000000000000000006044820152606401610498565b6001600160a01b038216610d4d5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610498565b336001600160a01b0384161480610d74575033610d6982610451565b6001600160a01b0316145b80610da257506001600160a01b038316600090815260036020908152604080832033845290915290205460ff165b610ddf5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610498565b600081815260026020526040902080546001600160a01b03191690556004805483919083908110610e2057634e487b7160e01b600052603260045260246000fd5b6000918252602082200180546001600160a01b0319166001600160a01b03939093169290921790915560048054600019840192919083908110610e7357634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610edf578360048281548110610eb057634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b610f30828261119d565b6001600160a01b0382163b15806110205750630a85bd0160e11b6001600160a01b03831663150b7a0260008585610f6a6004546000190190565b610f749190611623565b610f7f9060016115f7565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152608060648201526000608482015260a401602060405180830381600087803b158015610fdc57600080fd5b505af1158015610ff0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110149190611519565b6001600160e01b031916145b61105f5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610498565b5050565b6060816110875750506040805180820190915260018152600360fc1b602082015290565b8160005b81156110b1578061109b816116a1565b91506110aa9050600a8361160f565b915061108b565b60008167ffffffffffffffff8111156110da57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611104576020820181803683370190505b5090505b841561119557611119600183611623565b9150611126600a866116bc565b6111319060306115f7565b60f81b81838151811061115457634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061118e600a8661160f565b9450611108565b949350505050565b6001600160a01b0382166111f35760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610498565b806112405760405162461bcd60e51b815260206004820152600e60248201527f494e56414c49445f414d4f554e540000000000000000000000000000000000006044820152606401610498565b60045460005b6001830381101561129e576004805460010181556000908152604051838301916001600160a01b038716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4600101611246565b506004805460018101825560009182527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0386169081179091556040516000198585010192907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4505050565b80356001600160a01b038116811461133957600080fd5b919050565b60006020828403121561134f578081fd5b610c5282611322565b6000806040838503121561136a578081fd5b61137383611322565b915061138160208401611322565b90509250929050565b60008060006060848603121561139e578081fd5b6113a784611322565b92506113b560208501611322565b9150604084013590509250925092565b600080600080608085870312156113da578081fd5b6113e385611322565b93506113f160208601611322565b925060408501359150606085013567ffffffffffffffff80821115611414578283fd5b818701915087601f830112611427578283fd5b813581811115611439576114396116fc565b604051601f8201601f19908116603f01168101908382118183101715611461576114616116fc565b816040528281528a6020848701011115611479578586fd5b82602086016020830137918201602001949094529598949750929550505050565b600080604083850312156114ac578182fd5b6114b583611322565b9150602083013580151581146114c9578182fd5b809150509250929050565b600080604083850312156114e6578182fd5b6114ef83611322565b946020939093013593505050565b60006020828403121561150e578081fd5b8135610c5281611712565b60006020828403121561152a578081fd5b8151610c5281611712565b600060208284031215611546578081fd5b5035919050565b6000815180845261156581602086016020860161163a565b601f01601f19169290920160200192915050565b6000835161158b81846020880161163a565b83519083019061159f81836020880161163a565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526115da608083018461154d565b9695505050505050565b602081526000610c52602083018461154d565b6000821982111561160a5761160a6116d0565b500190565b60008261161e5761161e6116e6565b500490565b600082821015611635576116356116d0565b500390565b60005b8381101561165557818101518382015260200161163d565b83811115610b295750506000910152565b600181811c9082168061167a57607f821691505b6020821081141561169b57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156116b5576116b56116d0565b5060010190565b6000826116cb576116cb6116e6565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146109bd57600080fdfea164736f6c6343000804000a";

type ERC721MGasReporterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721MGasReporterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721MGasReporter__factory extends ContractFactory {
  constructor(...args: ERC721MGasReporterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: string,
    _symbol: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ERC721MGasReporter> {
    return super.deploy(
      _name,
      _symbol,
      overrides || {}
    ) as Promise<ERC721MGasReporter>;
  }
  override getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): ERC721MGasReporter {
    return super.attach(address) as ERC721MGasReporter;
  }
  override connect(signer: Signer): ERC721MGasReporter__factory {
    return super.connect(signer) as ERC721MGasReporter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721MGasReporterInterface {
    return new utils.Interface(_abi) as ERC721MGasReporterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721MGasReporter {
    return new Contract(address, _abi, signerOrProvider) as ERC721MGasReporter;
  }
}
