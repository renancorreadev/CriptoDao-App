/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SocialCryptoArt,
  SocialCryptoArtInterface,
} from "../SocialCryptoArt";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketplaceAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MissingRecipient",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarketplace",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltiesCantBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "SupplyExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wrongAmount",
        type: "uint256",
      },
    ],
    name: "TxLimitExceeded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "value",
            type: "uint96",
          },
        ],
        indexed: false,
        internalType: "struct LibPart.Part[]",
        name: "royalties",
        type: "tuple[]",
      },
    ],
    name: "RoyaltiesSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_TX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "createSocialTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getRaribleV2Royalties",
    outputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "value",
            type: "uint96",
          },
        ],
        internalType: "struct LibPart.Part[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketplaceAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "primarySale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040526040516200243d3803806200243d833981016040819052620000269162000208565b8181818181600090805190602001906200004292919062000092565b5080516200005890600190602084019062000092565b50506004805460010181556000525050505050606091821b6001600160601b031990811660805290821b1660a05230901b60c052620002e8565b828054620000a09062000295565b90600052602060002090601f016020900481019282620000c457600085556200010f565b82601f10620000df57805160ff19168380011785556200010f565b828001600101855582156200010f579182015b828111156200010f578251825591602001919060010190620000f2565b506200011d92915062000121565b5090565b5b808211156200011d576000815560010162000122565b80516001600160a01b03811681146200015057600080fd5b919050565b600082601f83011262000166578081fd5b81516001600160401b0380821115620001835762000183620002d2565b604051601f8301601f19908116603f01168101908282118183101715620001ae57620001ae620002d2565b81604052838152602092508683858801011115620001ca578485fd5b8491505b83821015620001ed5785820183015181830184015290820190620001ce565b83821115620001fe57848385830101525b9695505050505050565b600080600080608085870312156200021e578384fd5b620002298562000138565b9350620002396020860162000138565b60408601519093506001600160401b038082111562000256578384fd5b620002648883890162000155565b935060608701519150808211156200027a578283fd5b50620002898782880162000155565b91505092959194509250565b600181811c90821680620002aa57607f821691505b60208210811415620002cc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160601c60a05160601c60c05160601c6121006200033d60003960006115080152600061029201526000818161051601528181610d940152818161106e01528181611128015261115301526121006000f3fe60806040526004361061019a5760003560e01c80636352211e116100e1578063b88d4fde1161008a578063cf7a420c11610064578063cf7a420c146104e4578063daa17f4914610504578063e985e9c514610538578063f3b2db3f1461037857600080fd5b8063b88d4fde14610477578063c87b56dd14610497578063cad96cca146104b757600080fd5b806395d89b41116100bb57806395d89b4114610422578063a22cb46514610437578063b5d31e121461045757600080fd5b80636352211e146103cd5780636c0360eb146103ed57806370a082311461040257600080fd5b806323b872dd1161014357806332cb6b0c1161011d57806332cb6b0c1461037857806342842e0e1461038d5780634f6ccce7146103ad57600080fd5b806323b872dd146102f95780632a55205a146103195780632f745c591461035857600080fd5b806308551a531161017457806308551a5314610280578063095ea7b3146102b457806318160ddd146102d657600080fd5b806301ffc9a7146101f157806306fdde0314610226578063081812fc1461024857600080fd5b366101ec5760405162461bcd60e51b815260206004820152600860248201527f4241445f43414c4c00000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080fd5b3480156101fd57600080fd5b5061021161020c366004611d8b565b610581565b60405190151581526020015b60405180910390f35b34801561023257600080fd5b5061023b6105d4565b60405161021d9190611f74565b34801561025457600080fd5b50610268610263366004611e19565b610666565b6040516001600160a01b03909116815260200161021d565b34801561028c57600080fd5b506102687f000000000000000000000000000000000000000000000000000000000000000081565b3480156102c057600080fd5b506102d46102cf366004611d62565b6106d9565b005b3480156102e257600080fd5b50600454600019015b60405190815260200161021d565b34801561030557600080fd5b506102d4610314366004611c74565b6107ba565b34801561032557600080fd5b50610339610334366004611e31565b6107ca565b604080516001600160a01b03909316835260208301919091520161021d565b34801561036457600080fd5b506102eb610373366004611d62565b6108f6565b34801561038457600080fd5b506102eb600a81565b34801561039957600080fd5b506102d46103a8366004611c74565b6109de565b3480156103b957600080fd5b506102eb6103c8366004611e19565b610ae0565b3480156103d957600080fd5b506102686103e8366004611e19565b610b2b565b3480156103f957600080fd5b5061023b610bda565b34801561040e57600080fd5b506102eb61041d366004611c28565b610c68565b34801561042e57600080fd5b5061023b610d06565b34801561044357600080fd5b506102d4610452366004611d28565b610d15565b34801561046357600080fd5b506102d4610472366004611c74565b610d81565b34801561048357600080fd5b506102d4610492366004611caf565b610dd2565b3480156104a357600080fd5b5061023b6104b2366004611e19565b610ec6565b3480156104c357600080fd5b506104d76104d2366004611e19565b610fcd565b60405161021d9190611f61565b3480156104f057600080fd5b506102eb6104ff366004611dc3565b611061565b34801561051057600080fd5b506102687f000000000000000000000000000000000000000000000000000000000000000081565b34801561054457600080fd5b50610211610553366004611c42565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205460ff1690565b60006001600160e01b0319821663656cb66560e11b14156105a457506001919050565b6001600160e01b0319821663152a902d60e11b14156105c557506001919050565b6105ce826111e8565b92915050565b6060600080546105e39061202e565b80601f016020809104026020016040519081016040528092919081815260200182805461060f9061202e565b801561065c5780601f106106315761010080835404028352916020019161065c565b820191906000526020600020905b81548152906001019060200180831161063f57829003601f168201915b5050505050905090565b600061067182611251565b6106bd5760405162461bcd60e51b815260206004820152601160248201527f4e4f4e4558495354454e545f544f4b454e00000000000000000000000000000060448201526064016101e3565b506000908152600260205260409020546001600160a01b031690565b60006106e482610b2b565b6001600160a01b038116600090815260036020908152604080832033845290915290205490915060ff16806107215750336001600160a01b038216145b61075e5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016101e3565b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6107c5838383611265565b505050565b6000828152600560209081526040808320805482518185028101850190935280835284938493929190849084015b8282101561084c57600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046bffffffffffffffffffffffff16818301528252600190920191016107f8565b5050505090506000815111156108e6578060008151811061087d57634e487b7160e01b600052603260045260246000fd5b602002602001015160000151612710826000815181106108ad57634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516bffffffffffffffffffffffff16866108d29190611fcc565b6108dc9190611fb8565b92509250506108ef565b60008092509250505b9250929050565b600061090183610c68565b821061093f5760405162461bcd60e51b815260206004820152600d60248201526c0929cac82989288be929c888ab609b1b60448201526064016101e3565b600454600090815b818110156109925761095881610b2b565b6001600160a01b0316866001600160a01b0316141561098a57848314156109835792506105ce915050565b6001909201915b600101610947565b505060405162461bcd60e51b815260206004820152600960248201527f4e4f545f464f554e440000000000000000000000000000000000000000000000604482015260640190506101e3565b6109e9838383611265565b6001600160a01b0382163b1580610aa15750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a401602060405180830381600087803b158015610a5d57600080fd5b505af1158015610a71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a959190611da7565b6001600160e01b031916145b6107c55760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016101e3565b6000610aeb82611251565b610b275760405162461bcd60e51b815260206004820152600d60248201526c0929cac82989288be929c888ab609b1b60448201526064016101e3565b5090565b6000610b3682611251565b610b825760405162461bcd60e51b815260206004820152601160248201527f4e4f4e4558495354454e545f544f4b454e00000000000000000000000000000060448201526064016101e3565b815b60048181548110610ba557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031691508115610bc85750919050565b80610bd281612069565b915050610b84565b60068054610be79061202e565b80601f0160208091040260200160405190810160405280929190818152602001828054610c139061202e565b8015610c605780601f10610c3557610100808354040283529160200191610c60565b820191906000526020600020905b815481529060010190602001808311610c4357829003601f168201915b505050505081565b60006001600160a01b038216610cc05760405162461bcd60e51b815260206004820152600d60248201527f494e56414c49445f4f574e45520000000000000000000000000000000000000060448201526064016101e3565b60045460015b81811015610cff57610cd781610b2b565b6001600160a01b0316846001600160a01b03161415610cf7576001909201915b600101610cc6565b5050919050565b6060600180546105e39061202e565b3360008181526003602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610d896114fd565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107ba57604051632b35006d60e21b815260040160405180910390fd5b610ddd848484611265565b6001600160a01b0383163b1580610e815750604051630a85bd0160e11b808252906001600160a01b0385169063150b7a0290610e23903390899088908890600401611f25565b602060405180830381600087803b158015610e3d57600080fd5b505af1158015610e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e759190611da7565b6001600160e01b031916145b610ec05760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016101e3565b50505050565b6060610ed182611251565b610eee57604051634a1850bf60e11b815260040160405180910390fd5b600060068054610efd9061202e565b80601f0160208091040260200160405190810160405280929190818152602001828054610f299061202e565b8015610f765780601f10610f4b57610100808354040283529160200191610f76565b820191906000526020600020905b815481529060010190602001808311610f5957829003601f168201915b505050505090508051600014610fb55780610f9084611534565b604051602001610fa1929190611ef6565b604051602081830303815290604052610fc6565b604051806020016040528060008152505b9392505050565b606060056000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561105657600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046bffffffffffffffffffffffff1681830152825260019092019101611002565b505050509050919050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110ac57604051632b35006d60e21b815260040160405180910390fd5b600a6110bb6004546000190190565b14156110da57604051637d3d824960e01b815260040160405180910390fd5b60006110e96004546000190190565b9050600a831461110f57604051630108befd60e41b8152600481018490526024016101e3565b8351611122906006906020870190611b06565b5061114e7f00000000000000000000000000000000000000000000000000000000000000006001610d15565b6111787f00000000000000000000000000000000000000000000000000000000000000008461166e565b60015b8381116111a15761118f81326102ee6117f3565b8061119981612069565b91505061117b565b5082846040516111b19190611eda565b604051908190038120907f42b080781b0e91e3835001fc3baab945b90d5f9f3014974bea486fc1600b6a0090600090a39392505050565b60006301ffc9a760e01b6001600160e01b03198316148061121957506380ac58cd60e01b6001600160e01b03198316145b806112345750635b5e139f60e01b6001600160e01b03198316145b806105ce5750506001600160e01b03191663780e9d6360e01b1490565b600081158015906105ce5750506004541190565b826001600160a01b031661127882610b2b565b6001600160a01b0316146112ce5760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d0000000000000000000000000000000000000000000060448201526064016101e3565b6001600160a01b0382166113245760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016101e3565b336001600160a01b038416148061134b57503361134082610666565b6001600160a01b0316145b8061137957506001600160a01b038316600090815260036020908152604080832033845290915290205460ff165b6113b65760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016101e3565b600081815260026020526040902080546001600160a01b031916905560048054839190839081106113f757634e487b7160e01b600052603260045260246000fd5b6000918252602082200180546001600160a01b0319166001600160a01b0393909316929092179091556004805460001984019291908390811061144a57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614156114b657836004828154811061148757634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461153257600080fd5b565b6060816115585750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611582578061156c81612069565b915061157b9050600a83611fb8565b915061155c565b60008167ffffffffffffffff8111156115ab57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156115d5576020820181803683370190505b5090505b8415611666576115ea600183611feb565b91506115f7600a86612084565b611602906030611fa0565b60f81b81838151811061162557634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061165f600a86611fb8565b94506115d9565b949350505050565b6001600160a01b0382166116c45760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016101e3565b806117115760405162461bcd60e51b815260206004820152600e60248201527f494e56414c49445f414d4f554e5400000000000000000000000000000000000060448201526064016101e3565b60045460005b6001830381101561176f576004805460010181556000908152604051838301916001600160a01b038716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4600101611717565b506004805460018101825560009182527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0386169081179091556040516000198585010192907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4505050565b604080516001808252818301909252600091816020015b604080518082019091526000808252602082015281526020019060019003908161180a579050509050818160008151811061185557634e487b7160e01b600052603260045260246000fd5b6020026020010151602001906bffffffffffffffffffffffff1690816bffffffffffffffffffffffff168152505082816000815181106118a557634e487b7160e01b600052603260045260246000fd5b60209081029190910101516001600160a01b0390911690526118c78482611906565b7f3fa96d7b6bcbfe71ef171666d84db3cf52fa2d1c8afdb1cc8e486177f208b7df84826040516118f8929190611f87565b60405180910390a150505050565b6000805b8251811015611aa05760006001600160a01b031683828151811061193e57634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b03161415611972576040516350e9a53760e01b815260040160405180910390fd5b82818151811061199257634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516bffffffffffffffffffffffff16600014156119cd57604051631dfc4f8960e01b815260040160405180910390fd5b8281815181106119ed57634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516bffffffffffffffffffffffff1682611a129190611fa0565b915060056000858152602001908152602001600020838281518110611a4757634e487b7160e01b600052603260045260246000fd5b6020908102919091018101518254600181018455600093845292829020815191909201516bffffffffffffffffffffffff16600160a01b026001600160a01b039091161791015580611a9881612069565b91505061190a565b50612710811115611ac45760405163350a88b360e01b815260040160405180910390fd5b6107c583837f3fa96d7b6bcbfe71ef171666d84db3cf52fa2d1c8afdb1cc8e486177f208b7df8282604051611afa929190611f87565b60405180910390a15050565b828054611b129061202e565b90600052602060002090601f016020900481019282611b345760008555611b7a565b82601f10611b4d57805160ff1916838001178555611b7a565b82800160010185558215611b7a579182015b82811115611b7a578251825591602001919060010190611b5f565b50610b279291505b80821115610b275760008155600101611b82565b600067ffffffffffffffff80841115611bb157611bb16120c4565b604051601f8501601f19908116603f01168101908282118183101715611bd957611bd96120c4565b81604052809350858152868686011115611bf257600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611c2357600080fd5b919050565b600060208284031215611c39578081fd5b610fc682611c0c565b60008060408385031215611c54578081fd5b611c5d83611c0c565b9150611c6b60208401611c0c565b90509250929050565b600080600060608486031215611c88578081fd5b611c9184611c0c565b9250611c9f60208501611c0c565b9150604084013590509250925092565b60008060008060808587031215611cc4578081fd5b611ccd85611c0c565b9350611cdb60208601611c0c565b925060408501359150606085013567ffffffffffffffff811115611cfd578182fd5b8501601f81018713611d0d578182fd5b611d1c87823560208401611b96565b91505092959194509250565b60008060408385031215611d3a578182fd5b611d4383611c0c565b915060208301358015158114611d57578182fd5b809150509250929050565b60008060408385031215611d74578182fd5b611d7d83611c0c565b946020939093013593505050565b600060208284031215611d9c578081fd5b8135610fc6816120da565b600060208284031215611db8578081fd5b8151610fc6816120da565b60008060408385031215611dd5578182fd5b823567ffffffffffffffff811115611deb578283fd5b8301601f81018513611dfb578283fd5b611e0a85823560208401611b96565b95602094909401359450505050565b600060208284031215611e2a578081fd5b5035919050565b60008060408385031215611e43578182fd5b50508035926020909101359150565b6000815180845260208085019450808401835b83811015611ea357815180516001600160a01b031688528301516bffffffffffffffffffffffff168388015260409096019590820190600101611e65565b509495945050505050565b60008151808452611ec6816020860160208601612002565b601f01601f19169290920160200192915050565b60008251611eec818460208701612002565b9190910192915050565b60008351611f08818460208801612002565b835190830190611f1c818360208801612002565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611f576080830184611eae565b9695505050505050565b602081526000610fc66020830184611e52565b602081526000610fc66020830184611eae565b8281526040602082015260006116666040830184611e52565b60008219821115611fb357611fb3612098565b500190565b600082611fc757611fc76120ae565b500490565b6000816000190483118215151615611fe657611fe6612098565b500290565b600082821015611ffd57611ffd612098565b500390565b60005b8381101561201d578181015183820152602001612005565b83811115610ec05750506000910152565b600181811c9082168061204257607f821691505b6020821081141561206357634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561207d5761207d612098565b5060010190565b600082612093576120936120ae565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146120f057600080fd5b5056fea164736f6c6343000804000a";

type SocialCryptoArtConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SocialCryptoArtConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SocialCryptoArt__factory extends ContractFactory {
  constructor(...args: SocialCryptoArtConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _marketplaceAddress: string,
    _seller: string,
    _name: string,
    _symbol: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<SocialCryptoArt> {
    return super.deploy(
      _marketplaceAddress,
      _seller,
      _name,
      _symbol,
      overrides || {}
    ) as Promise<SocialCryptoArt>;
  }
  override getDeployTransaction(
    _marketplaceAddress: string,
    _seller: string,
    _name: string,
    _symbol: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _marketplaceAddress,
      _seller,
      _name,
      _symbol,
      overrides || {}
    );
  }
  override attach(address: string): SocialCryptoArt {
    return super.attach(address) as SocialCryptoArt;
  }
  override connect(signer: Signer): SocialCryptoArt__factory {
    return super.connect(signer) as SocialCryptoArt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SocialCryptoArtInterface {
    return new utils.Interface(_abi) as SocialCryptoArtInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SocialCryptoArt {
    return new Contract(address, _abi, signerOrProvider) as SocialCryptoArt;
  }
}
