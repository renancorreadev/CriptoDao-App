/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RoyaltiesV2Impl,
  RoyaltiesV2ImplInterface,
} from "../../../royalties/RoyaltiesBase.sol/RoyaltiesV2Impl";

const _abi = [
  {
    inputs: [],
    name: "MissingRecipient",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltiesCantBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "value",
            type: "uint96",
          },
        ],
        indexed: false,
        internalType: "struct LibPart.Part[]",
        name: "royalties",
        type: "tuple[]",
      },
    ],
    name: "RoyaltiesSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getRaribleV2Royalties",
    outputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "value",
            type: "uint96",
          },
        ],
        internalType: "struct LibPart.Part[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103ae806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632a55205a1461003b578063cad96cca14610072575b600080fd5b61004e610049366004610292565b610092565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b61008561008036600461027a565b6101ef565b60405161006991906102b3565b60008281526020819052604081205481906100b2575060009050806101e8565b60008481526020818152604080832080548251818502810185019093528083529192909190849084015b8282101561013057600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046bffffffffffffffffffffffff16818301528252600190920191016100dc565b5050505090508060008151811061015757634e487b7160e01b600052603260045260246000fd5b60209081029190910101515192506000805b82518110156101cb5782818151811061019257634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516bffffffffffffffffffffffff16826101b79190610319565b9150806101c381610370565b915050610169565b506127106101d98683610351565b6101e39190610331565b925050505b9250929050565b600081815260208181526040808320805482518185028101850190935280835260609492939192909184015b8282101561026f57600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046bffffffffffffffffffffffff168183015282526001909201910161021b565b505050509050919050565b60006020828403121561028b578081fd5b5035919050565b600080604083850312156102a4578081fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b8281101561030c57815180516001600160a01b031685528601516bffffffffffffffffffffffff168685015292840192908501906001016102d0565b5091979650505050505050565b6000821982111561032c5761032c61038b565b500190565b60008261034c57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561036b5761036b61038b565b500290565b60006000198214156103845761038461038b565b5060010190565b634e487b7160e01b600052601160045260246000fdfea164736f6c6343000804000a";

type RoyaltiesV2ImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyaltiesV2ImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyaltiesV2Impl__factory extends ContractFactory {
  constructor(...args: RoyaltiesV2ImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RoyaltiesV2Impl> {
    return super.deploy(overrides || {}) as Promise<RoyaltiesV2Impl>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RoyaltiesV2Impl {
    return super.attach(address) as RoyaltiesV2Impl;
  }
  override connect(signer: Signer): RoyaltiesV2Impl__factory {
    return super.connect(signer) as RoyaltiesV2Impl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltiesV2ImplInterface {
    return new utils.Interface(_abi) as RoyaltiesV2ImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoyaltiesV2Impl {
    return new Contract(address, _abi, signerOrProvider) as RoyaltiesV2Impl;
  }
}
