/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721TokenReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721TokenReceiver__factory>;
    getContractFactory(
      name: "ERC721M",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721M__factory>;
    getContractFactory(
      name: "Marketplace",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Marketplace__factory>;
    getContractFactory(
      name: "AbstractRoyalties",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractRoyalties__factory>;
    getContractFactory(
      name: "RoyaltiesV2Impl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoyaltiesV2Impl__factory>;
    getContractFactory(
      name: "IERC2981",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2981__factory>;
    getContractFactory(
      name: "LibPart",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibPart__factory>;
    getContractFactory(
      name: "LibRoyalties2981",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibRoyalties2981__factory>;
    getContractFactory(
      name: "RoyaltiesV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoyaltiesV2__factory>;
    getContractFactory(
      name: "SocialCryptoArt",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SocialCryptoArt__factory>;
    getContractFactory(
      name: "Auth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Auth__factory>;
    getContractFactory(
      name: "Authority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Authority__factory>;

    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721TokenReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721TokenReceiver>;
    getContractAt(
      name: "ERC721M",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721M>;
    getContractAt(
      name: "Marketplace",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Marketplace>;
    getContractAt(
      name: "AbstractRoyalties",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AbstractRoyalties>;
    getContractAt(
      name: "RoyaltiesV2Impl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RoyaltiesV2Impl>;
    getContractAt(
      name: "IERC2981",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2981>;
    getContractAt(
      name: "LibPart",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibPart>;
    getContractAt(
      name: "LibRoyalties2981",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibRoyalties2981>;
    getContractAt(
      name: "RoyaltiesV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RoyaltiesV2>;
    getContractAt(
      name: "SocialCryptoArt",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SocialCryptoArt>;
    getContractAt(
      name: "Auth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Auth>;
    getContractAt(
      name: "Authority",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Authority>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
